<div class="min-h-screen bg-gray-50">
  <!-- Header Section -->
  <div class="bg-white shadow-sm border-b border-gray-200">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
      <div class="flex items-center justify-between">
        <div>
          <h1 class="text-3xl font-bold text-gray-900">Reading Tests</h1>
          <p class="text-gray-600 mt-1">Manage your test collection and pools</p>
        </div>
        <div class="flex space-x-3">
          <a href="/admin/tests/create" class="btn-3d-primary">
            <span class="btn-content">
              <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
              </svg>
              Create New Test
            </span>
          </a>
          
        </div>
      </div>
    </div>
  </div>

  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <!-- Advanced Search & Filters -->
    <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6 mb-8">
      <div class="flex items-center justify-between mb-4">
        <h3 class="text-lg font-semibold text-gray-900">Search & Filter Tests</h3>
        <button id="toggleAdvanced" class="text-blue-600 hover:text-blue-700 text-sm font-medium">
          Advanced Options
        </button>
      </div>
      
      <form id="searchForm" action="/admin/tests" method="GET" class="space-y-4">
        <!-- Basic Search -->
        <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
          <div class="md:col-span-2">
            <div class="relative">
              <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
               
                </svg>
              </div>
              <input type="text" id="search" name="search" 
                     placeholder="Search by title, description, or creator..." 
                     class="search-input pl-10"
                     value="<%= locals.search || '' %>">
            </div>
          </div>
          
          <div class="flex space-x-2">
            <button type="submit" class="btn-search">
              <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
              </svg>
              Search
            </button>
            <button type="button" id="clearSearch" class="btn-clear">
              Clear
            </button>
          </div>
        </div>

        <!-- Advanced Filters -->
        <div id="advancedFilters" class="hidden border-t pt-4">
          <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-2">Sort By</label>
              <select name="sortBy" class="filter-select">
                <option value="createdAt" <%= locals.sortBy === 'createdAt' ? 'selected' : '' %>>Date Created</option>
                <option value="title" <%= locals.sortBy === 'title' ? 'selected' : '' %>>Title</option>
                <option value="totalScore" <%= locals.sortBy === 'totalScore' ? 'selected' : '' %>>Total Score</option>
                <option value="timeLimit" <%= locals.sortBy === 'timeLimit' ? 'selected' : '' %>>Time Limit</option>
              </select>
            </div>
            
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-2">Order</label>
              <select name="order" class="filter-select">
                <option value="asc" <%= locals.order === 'asc' ? 'selected' : '' %>>Oldest First</option>
                <option value="desc" <%= locals.order === 'desc' ? 'selected' : '' %>>Newest First</option>
              </select>
            </div>
            
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-2">Min Score</label>
              <input type="number" name="minScore" class="filter-input" 
                     placeholder="0" value="<%= locals.minScore || '' %>">
            </div>
            
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-2">Max Time (min)</label>
              <input type="number" name="maxTime" class="filter-input" 
                     placeholder="120" value="<%= locals.maxTime || '' %>">
            </div>
          </div>
        </div>
      </form>
    </div>

    <!-- Results Summary -->
    <div class="flex items-center justify-between mb-6">
      <div class="text-sm text-gray-600">
        Showing <span class="font-medium"><%= tests ? tests.length : 0 %></span> of <span class="font-medium"><%= locals.totalResults || 0 %></span> tests
        <% if (locals.search) { %>
          for "<span class="font-medium text-blue-600"><%= locals.search %></span>"
        <% } %>
        <% if (locals.pagination) { %>
          (Page <span class="font-medium"><%= locals.pagination.current %></span> of <span class="font-medium"><%= locals.pagination.total %></span>)
        <% } %>
      </div>
      
      <div class="flex items-center space-x-4">
        <div class="flex items-center space-x-2">
          <label class="text-sm text-gray-600">View:</label>
          <button id="gridView" class="view-btn active">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z"></path>
            </svg>
          </button>
          <button id="listView" class="view-btn">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 10h16M4 14h16M4 18h16"></path>
            </svg>
          </button>
        </div>
      </div>
    </div>

    <!-- Grid View -->
    <div id="gridContainer" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8">
      <% if (tests && tests.length > 0) { %>
        <% tests.forEach(test => { %>
          <div class="test-card-3d" data-tilt>
            <div class="test-card-inner">
              <div class="test-card-header">
                <div class="test-icon">
                  <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                  </svg>
                </div>
                <div class="test-status">
                  <span class="status-badge active">Active</span>
                </div>
              </div>
              
              <div class="test-card-content">
                <h3 class="test-title"><%= test.title %></h3>
              
                
                <div class="test-stats">
                  <div class="stat-item">
                    <span class="stat-label">Time Limit</span>
                    <span class="stat-value"><%= test.timeLimit %> min</span>
                  </div>
                  <div class="stat-item">
                    <span class="stat-label">Total Questions</span>
                    <span class="stat-value"><%= test.totalScore %> pts</span>
                  </div>
                  <div class="stat-item">
                    <span class="stat-label">Passages</span>
                    <span class="stat-value"><%= test.passages.length %></span>
                  </div>
                </div>
              </div>
              
              <div class="test-card-footer">
                <div class="test-meta">
                    <span class="creator">By <%= test.createdBy?.fullName || 'Unknown' %></span>
                  <span class="date"><%= new Date(test.createdAt).toLocaleDateString() %></span>
                </div>
                
                <div class="test-actions">
                  <a href="/admin/tests/<%= test._id %>" class="action-btn view" title="View Details">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                    </svg>
                  </a>
                  <a href="/admin/tests/<%= test._id %>/edit" class="action-btn edit" title="Edit Test">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                    </svg>
                  </a>
                  <button onclick="deleteTest('<%= test._id %>')" class="action-btn delete" title="Delete Test">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                    </svg>
                  </button>
                </div>
              </div>
            </div>
          </div>
        <% }); %>
      <% } else { %>
        <div class="col-span-full">
          <div class="empty-state-3d">
            <svg class="w-16 h-16 text-gray-400 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
            </svg>
            <h3>No tests found</h3>
            <p>Create your first test to get started</p>
            <a href="/admin/tests/create" class="btn-3d-primary mt-4">
              <span class="btn-content">Create Test</span>
            </a>
          </div>
        </div>
      <% } %>
    </div>

    <!-- List View -->
    <div id="listContainer" class="hidden bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden mb-8">
      <% if (tests && tests.length > 0) { %>
        <table class="min-w-full divide-y divide-gray-200">
          <thead class="bg-gray-50">
            <tr>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Test</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Question Type</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Time Limit</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Score</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Passages</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Creator</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
            </tr>
          </thead>
          <tbody class="bg-white divide-y divide-gray-200">
            <% tests.forEach(test => { %>
              <tr class="hover:bg-gray-50 transition-colors">
                <td class="px-6 py-4">
                  <div class="flex items-center">
                    <div class="flex-shrink-0 h-10 w-10">
                      <div class="h-10 w-10 rounded-lg bg-blue-100 flex items-center justify-center">
                        <svg class="w-5 h-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                        </svg>
                      </div>
                    </div>
                    <div class="ml-4">
                      <div class="text-sm font-medium text-gray-900"><%= test.title %></div>
                      <div class="text-sm text-gray-500"><%= new Date(test.createdAt).toLocaleDateString() %></div>
                    </div>
                  </div>
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                  <% if (test.questionTypeFilter && test.questionTypeFilter !== 'all') { %>
                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                      <% if (test.questionTypeFilter === 'multiple_choice') { %>
                        Trắc nghiệm
                      <% } else if (test.questionTypeFilter === 'fill_blank') { %>
                        Điền chỗ trống
                      <% } else if (test.questionTypeFilter === 'matching') { %>
                        Nối
                      <% } else if (test.questionTypeFilter === 'true_false_not_given') { %>
                        Đúng/Sai/Không đề cập
                      <% } else if (test.questionTypeFilter === 'short_answer') { %>
                        Trả lời ngắn
                      <% } else { %>
                        <%= test.questionTypeFilter %>
                      <% } %>
                    </span>
                  <% } else { %>
                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800">
                      Tất cả loại
                    </span>
                  <% } %>
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                  <%= test.timeLimit %> minutes
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                  <%= test.totalScore %> points
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                  <%= test.passages.length %> <%= test.passages.length === 1 ? 'passage' : 'passages' %>
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                    <%= test.createdBy?.fullName || 'Unknown' %>
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                  <div class="flex space-x-2">
                    <a href="/admin/tests/<%= test._id %>" class="text-blue-600 hover:text-blue-900" title="View">
                      <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                      </svg>
                    </a>
                    <a href="/admin/tests/<%= test._id %>/edit" class="text-indigo-600 hover:text-indigo-900" title="Edit">
                      <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                      </svg>
                    </a>
                    <button onclick="deleteTest('<%= test._id %>')" class="text-red-600 hover:text-red-900" title="Delete">
                      <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                      </svg>
                    </button>
                  </div>
                </td>
              </tr>
            <% }); %>
          </tbody>
        </table>
      <% } %>
    </div>

    <!-- Pagination -->
    <% if (locals.pagination && locals.pagination.total > 1) { %>
      <div class="flex items-center justify-center mb-8">
        <nav class="pagination-nav">
          <div class="flex items-center space-x-2">
            <!-- Previous Button -->
            <% if (locals.pagination.hasPrev) { %>
              <a href="?page=<%= locals.pagination.prev %><%= locals.search ? '&search=' + encodeURIComponent(locals.search) : '' %><%= locals.sortBy ? '&sortBy=' + locals.sortBy : '' %><%= locals.order ? '&order=' + locals.order : '' %><%= locals.minScore ? '&minScore=' + locals.minScore : '' %><%= locals.maxTime ? '&maxTime=' + locals.maxTime : '' %>" 
                 class="pagination-btn">
                <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                </svg>
                Previous
              </a>
            <% } else { %>
              <span class="pagination-btn disabled">
                <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                </svg>
                Previous
              </span>
            <% } %>

            <!-- Page Numbers -->
            <div class="flex items-center space-x-1">
              <% 
                const startPage = Math.max(1, locals.pagination.current - 2);
                const endPage = Math.min(locals.pagination.total, locals.pagination.current + 2);
              %>
              
              <% if (startPage > 1) { %>
                <a href="?page=1<%= locals.search ? '&search=' + encodeURIComponent(locals.search) : '' %><%= locals.sortBy ? '&sortBy=' + locals.sortBy : '' %><%= locals.order ? '&order=' + locals.order : '' %><%= locals.minScore ? '&minScore=' + locals.minScore : '' %><%= locals.maxTime ? '&maxTime=' + locals.maxTime : '' %>" 
                   class="pagination-number">1</a>
                <% if (startPage > 2) { %>
                  <span class="pagination-dots">...</span>
                <% } %>
              <% } %>

              <% for (let i = startPage; i <= endPage; i++) { %>
                <% if (i === locals.pagination.current) { %>
                  <span class="pagination-number active"><%= i %></span>
                <% } else { %>
                  <a href="?page=<%= i %><%= locals.search ? '&search=' + encodeURIComponent(locals.search) : '' %><%= locals.sortBy ? '&sortBy=' + locals.sortBy : '' %><%= locals.order ? '&order=' + locals.order : '' %><%= locals.minScore ? '&minScore=' + locals.minScore : '' %><%= locals.maxTime ? '&maxTime=' + locals.maxTime : '' %>" 
                     class="pagination-number"><%= i %></a>
                <% } %>
              <% } %>

              <% if (endPage < locals.pagination.total) { %>
                <% if (endPage < locals.pagination.total - 1) { %>
                  <span class="pagination-dots">...</span>
                <% } %>
                <a href="?page=<%= locals.pagination.total %><%= locals.search ? '&search=' + encodeURIComponent(locals.search) : '' %><%= locals.sortBy ? '&sortBy=' + locals.sortBy : '' %><%= locals.order ? '&order=' + locals.order : '' %><%= locals.minScore ? '&minScore=' + locals.minScore : '' %><%= locals.maxTime ? '&maxTime=' + locals.maxTime : '' %>" 
                   class="pagination-number"><%= locals.pagination.total %></a>
              <% } %>
            </div>

            <!-- Next Button -->
            <% if (locals.pagination.hasNext) { %>
              <a href="?page=<%= locals.pagination.next %><%= locals.search ? '&search=' + encodeURIComponent(locals.search) : '' %><%= locals.sortBy ? '&sortBy=' + locals.sortBy : '' %><%= locals.order ? '&order=' + locals.order : '' %><%= locals.minScore ? '&minScore=' + locals.minScore : '' %><%= locals.maxTime ? '&maxTime=' + locals.maxTime : '' %>" 
                 class="pagination-btn">
                Next
                <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                </svg>
              </a>
            <% } else { %>
              <span class="pagination-btn disabled">
                Next
                <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                </svg>
              </span>
            <% } %>
          </div>
        </nav>
      </div>
    <% } %>

   
  </div>
</div>
<% scripts = `
<style>
/* Button Styles */
.btn-3d-primary, .btn-3d-success, .btn-3d-secondary {
  position: relative;
  display: inline-flex;
  align-items: center;
  padding: 12px 24px;
  border-radius: 8px;
  font-weight: 600;
  text-decoration: none;
  transition: all 0.3s ease;
  transform-style: preserve-3d;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.btn-3d-primary {
  background: linear-gradient(145deg, #3b82f6, #2563eb);
  color: white;
}

.btn-3d-success {
  background: linear-gradient(145deg, #10b981, #059669);
  color: white;
}

.btn-3d-secondary {
  background: linear-gradient(145deg, #f3f4f6, #e5e7eb);
  color: #374151;
}

.btn-3d-primary:hover, .btn-3d-success:hover, .btn-3d-secondary:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.15);
}

/* Search Styles */
.search-input, .filter-select, .filter-input {
  width: 100%;
  padding: 12px 16px;
  border: 1px solid #d1d5db;
  border-radius: 8px;
  font-size: 14px;
  transition: all 0.3s ease;
}

.search-input:focus, .filter-select:focus, .filter-input:focus {
  outline: none;
  border-color: #3b82f6;
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
}

.btn-search, .btn-clear {
  padding: 12px 20px;
  border-radius: 8px;
  font-weight: 500;
  transition: all 0.3s ease;
  display: inline-flex;
  align-items: center;
}

.btn-search {
  background: #3b82f6;
  color: white;
  border: none;
}

.btn-clear {
  background: #f3f4f6;
  color: #6b7280;
  border: 1px solid #d1d5db;
}

.btn-search:hover {
  background: #2563eb;
}

.btn-clear:hover {
  background: #e5e7eb;
}

/* View Toggle */
.view-btn {
  padding: 8px;
  border: 1px solid #d1d5db;
  background: white;
  border-radius: 6px;
  color: #6b7280;
  transition: all 0.3s ease;
}

.view-btn.active, .view-btn:hover {
  background: #3b82f6;
  color: white;
  border-color: #3b82f6;
}

/* Test Cards */
.test-card-3d {
  background: white;
  border-radius: 12px;
  border: 1px solid #e5e7eb;
  overflow: hidden;
  transition: all 0.3s ease;
  transform-style: preserve-3d;
}

.test-card-3d:hover {
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
  transform: translateY(-4px);
}

.test-card-inner {
  padding: 24px;
}

.test-card-header {
  display: flex;
  justify-content: between;
  align-items: center;
  margin-bottom: 16px;
}

.test-icon {
  width: 48px;
  height: 48px;
  background: linear-gradient(145deg, #dbeafe, #bfdbfe);
  border-radius: 12px;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #3b82f6;
}

.status-badge {
  padding: 4px 12px;
  border-radius: 20px;
  font-size: 12px;
  font-weight: 600;
  text-transform: uppercase;
}

.status-badge.active {
  background: #dcfce7;
  color: #166534;
}

.test-title {
  font-size: 18px;
  font-weight: 700;
  color: #111827;
  margin-bottom: 8px;
}

.test-description {
  color: #6b7280;
  font-size: 14px;
  margin-bottom: 16px;
  line-height: 1.5;
}

.test-stats {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 12px;
  margin-bottom: 20px;
}

.stat-item {
  text-align: center;
  padding: 12px;
  background: #f9fafb;
  border-radius: 8px;
}

.stat-label {
  display: block;
  font-size: 12px;
  color: #6b7280;
  margin-bottom: 4px;
}

.stat-value {
  display: block;
  font-size: 16px;
  font-weight: 700;
  color: #111827;
}

.test-card-footer {
  border-top: 1px solid #f3f4f6;
  padding-top: 16px;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.test-meta {
  display: flex;
  flex-direction: column;
  gap: 4px;
}

.creator {
  font-size: 14px;
  font-weight: 500;
  color: #374151;
}

.date {
  font-size: 12px;
  color: #9ca3af;
}

.test-actions {
  display: flex;
  gap: 8px;
}

.action-btn {
  width: 36px;
  height: 36px;
  border-radius: 8px;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.3s ease;
  border: none;
  cursor: pointer;
}

.action-btn.view {
  background: #dbeafe;
  color: #3b82f6;
}

.action-btn.edit {
  background: #f3e8ff;
  color: #8b5cf6;
}

.action-btn.delete {
  background: #fee2e2;
  color: #ef4444;
}

.action-btn:hover {
  transform: scale(1.1);
}

/* Pool Features */
.pool-feature {
  text-align: center;
  padding: 20px;
  border: 1px solid #e5e7eb;
  border-radius: 12px;
  transition: all 0.3s ease;
}

.pool-feature:hover {
  border-color: #3b82f6;
  box-shadow: 0 4px 12px rgba(59, 130, 246, 0.1);
}

.pool-icon {
  width: 48px;
  height: 48px;
  background: linear-gradient(145deg, #dbeafe, #bfdbfe);
  border-radius: 12px;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #3b82f6;
  margin: 0 auto 12px;
}

.pool-feature h3 {
  font-size: 16px;
  font-weight: 600;
  color: #111827;
  margin-bottom: 8px;
}

.pool-feature p {
  font-size: 14px;
  color: #6b7280;
  line-height: 1.5;
}

/* Empty State */
.empty-state-3d {
  text-align: center;
  padding: 48px 24px;
  background: white;
  border-radius: 12px;
  border: 2px dashed #d1d5db;
}

.empty-state-3d h3 {
  font-size: 18px;
  font-weight: 600;
  color: #374151;
  margin-bottom: 8px;
}

.empty-state-3d p {
  color: #6b7280;
  margin-bottom: 24px;
}

/* Pagination Styles */
.pagination-nav {
  background: white;
  border-radius: 12px;
  padding: 16px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
  border: 1px solid #e5e7eb;
}

.pagination-btn {
  display: inline-flex;
  align-items: center;
  padding: 8px 16px;
  background: white;
  border: 1px solid #d1d5db;
  border-radius: 8px;
  color: #374151;
  text-decoration: none;
  font-weight: 500;
  transition: all 0.2s ease;
}

.pagination-btn:hover:not(.disabled) {
  background: #f3f4f6;
  border-color: #9ca3af;
  transform: translateY(-1px);
}

.pagination-btn.disabled {
  opacity: 0.5;
  cursor: not-allowed;
  color: #9ca3af;
}

.pagination-number {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 40px;
  height: 40px;
  border-radius: 8px;
  background: white;
  border: 1px solid #d1d5db;
  color: #374151;
  text-decoration: none;
  font-weight: 500;
  transition: all 0.2s ease;
}

.pagination-number:hover:not(.active) {
  background: #f3f4f6;
  border-color: #9ca3af;
  transform: translateY(-1px);
}

.pagination-number.active {
  background: #3b82f6;
  border-color: #3b82f6;
  color: white;
  transform: translateY(-1px);
  box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);
}

.pagination-dots {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 40px;
  height: 40px;
  color: #9ca3af;
  font-weight: 600;
}

/* Responsive */
@media (max-width: 768px) {
  .grid {
    grid-template-columns: 1fr;
  }
  
  .test-stats {
    grid-template-columns: 1fr;
  }
  
  .test-card-footer {
    flex-direction: column;
    gap: 12px;
    align-items: flex-start;
  }

  .pagination-nav {
    padding: 12px;
  }

  .pagination-btn {
    padding: 6px 12px;
    font-size: 14px;
  }

  .pagination-number {
    width: 36px;
    height: 36px;
    font-size: 14px;
  }

  .pagination-dots {
    width: 36px;
    height: 36px;
  }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Toggle advanced filters
  const toggleBtn = document.getElementById('toggleAdvanced');
  const advancedFilters = document.getElementById('advancedFilters');
  
  toggleBtn.addEventListener('click', function() {
    advancedFilters.classList.toggle('hidden');
    this.textContent = advancedFilters.classList.contains('hidden') ? 'Advanced Options' : 'Hide Advanced';
  });

  // Clear search
  document.getElementById('clearSearch').addEventListener('click', function() {
    document.getElementById('searchForm').reset();
    window.location.href = '/admin/tests';
  });

  // View toggle
  const gridView = document.getElementById('gridView');
  const listView = document.getElementById('listView');
  const gridContainer = document.getElementById('gridContainer');
  const listContainer = document.getElementById('listContainer');

  gridView.addEventListener('click', function() {
    gridView.classList.add('active');
    listView.classList.remove('active');
    gridContainer.classList.remove('hidden');
    listContainer.classList.add('hidden');
  });

  listView.addEventListener('click', function() {
    listView.classList.add('active');
    gridView.classList.remove('active');
    listContainer.classList.remove('hidden');
    gridContainer.classList.add('hidden');
  });


  // Reset to page 1 when form is submitted
  document.getElementById('searchForm').addEventListener('submit', function() {
    const existingPageInput = this.querySelector('input[name="page"]');
    if (existingPageInput) {
      existingPageInput.remove();
    }
  });

  // Tilt effect for cards
  const cards = document.querySelectorAll('[data-tilt]');
  cards.forEach(function(card) {
    card.addEventListener('mousemove', function(e) {
      const rect = card.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;
      
      const centerX = rect.width / 2;
      const centerY = rect.height / 2;
      
      const rotateX = (y - centerY) / 20;
      const rotateY = (centerX - x) / 20;
      
      card.style.transform = 'perspective(1000px) rotateX(' + rotateX + 'deg) rotateY(' + rotateY + 'deg) translateY(-4px)';
    });
    
    card.addEventListener('mouseleave', function() {
      card.style.transform = 'perspective(1000px) rotateX(0deg) rotateY(0deg) translateY(0px)';
    });
  });
});

// Delete function
function deleteTest(id) {
  if (confirm('Are you sure you want to delete this test? This action cannot be undone.')) {
    fetch('/admin/tests/' + id, {
      method: 'DELETE',
      headers: {
        'Content-Type': 'application/json',
      }
    })
    .then(function(response) {
      if (response.ok) {
        location.reload();
      } else {
        alert('Error deleting test');
      }
    })
    .catch(function(error) {
      alert('Error deleting test');
    });
  }
}
</script>

<script src="/js/admin/test/index.js"></script>
`;
%>